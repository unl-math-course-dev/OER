<?xml version="1.0" encoding="UTF-8"?>

<!-- This file is part of the book                                 -->
<!--                                                               -->
<!--    Ordinary Differential Equations Project                    -->
<!--                                                               -->
<!-- Copyright (C) 2013-2022 Thomas W. Judson                      -->
<!-- See the file COPYING for copying conditions.                  -->

<section xml:id="nonlinear04" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>The Hopf Bifurcation</title>
    <objectives>
        <ul>

            <li>To understand that <term>Hopf bifurcations</term>; that is, bifurcations for systems parameterized by <m>\alpha</m>, occur if an attracting periodic solution encircling an equilibrium solution develops as <m>\alpha</m> passes through the bifurcation value.</li>

        </ul>
    </objectives>    
    <introduction>

        <p>If we consider the phase portrait of a system
            <md>
                <mrow>\frac{dx}{dt} &amp; = f(x, y)</mrow>
                <mrow>\frac{dy}{dt} &amp; = g(x, y),</mrow>
            </md>
        we may see closed orbits and various types of equilibrium solutions. If we make a slight change in the system, then we might reasonably expect the phase portrait to change slightly. For example, a closed orbit might expand or contract, an equilibrium solution might shift, or a spiral source might tighten up, but we would not expect new equilibrium solutions to appear or a spiral source to turn into a spiral sink. However, this may be exactly what happens. If such a change occurs in the system through an adjustment of a parameter, we say a <term>bifurcation</term><idx>bifurcation</idx> has occurred.</p>

    </introduction>

    <subsection xml:id="nonlinear04-subsection-bifurcations">
        <title>Bifurcations</title>

        <p>The simplest bifurcations occur when an equilibrium solution appears, disappears, or splits into two or more equilibrium solutions. For example, the system
            <md>
                <mrow>\frac{dx}{dt} &amp; = \alpha + x^2</mrow>
                <mrow>\frac{dy}{dt} &amp; = -y</mrow>
            </md>
        has no equilibrium solution if <m>\alpha \gt 0</m> (<xref ref="nonlinear04-figure-hopf-1" />). However, we have a single equilibrium solution at the origin if <m>\alpha = 0</m> and two equilibrium solutions, <m>(\pm \sqrt{-\alpha}, 0)</m>, if <m>\alpha \lt 0</m>.</p>

        <figure xml:id="nonlinear04-figure-hopf-1">
             <image width="60%" xml:id="nonlinear04-hopf-1">
                <description>a direction field of slope arrows with a solution moving down and right</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 5
                    F = [alpha + x^2, -y]
                    xmin = -10
                    xmax = 10
                    ymin = -10
                    ymax = 10
                    start_x = -9
                    start_y = 9
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=1,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p = line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S))-2], S[int(len(S))-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    n = sqrt(F[0]^2 + F[1]^2)
                    p += plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    p
                </sageplot>
            </image>
            <caption>Solutions for <m>\alpha \gt 0</m></caption>
        </figure>
            
        <p>The Jacobian of the system
            <md>
                <mrow>\frac{dx}{dt} &amp; = \alpha + x^2</mrow>
                <mrow>\frac{dy}{dt} &amp; = -y</mrow>
            </md>
        is
            <me>J(x,y)
            =
            \begin{pmatrix}
            2x &amp; 0 \\
            0 &amp; -1
            \end{pmatrix}.</me>
        If <m>\alpha = 0</m>, then <m>J</m> has eigenvalues 0 and <m>-1</m>. This is not an elementary equilibrium point such a saddle, a sink, or a spiral source. We call this type of equilibrium solution a <term>saddle-node</term><idx>saddle-node</idx>.  On the right half of the <m>xy</m>-plane, the equilibrium solution resembles a saddle, while on the left half it resembles a sink (<xref ref="nonlinear04-figure-hopf-2" />).</p>
            
        <figure xml:id="nonlinear04-figure-hopf-2">
            <image width="60%" xml:id="nonlinear04-hopf-2">
                <description>a direction field of slope arrows with a solution moving right and then down</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = -16
                    F = [alpha + x^2, -y]
                    xmin = -10
                    xmax = 10
                    ymin = -10
                    ymax = 10
                    start_x = -9
                    start_y = 9
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=2.9,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p = line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S))-2], S[int(len(S))-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    n = sqrt(F[0]^2 + F[1]^2)
                    p += plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    p
                </sageplot>
            </image>
            <caption>Solutions for <m>\alpha \lt 0</m></caption>
        </figure>

        <p>If <m>\alpha \lt 0</m>, then 
            <me>J
            =
            \begin{pmatrix}
            2 \sqrt{-\alpha} &amp; 0 \\
            0 &amp; -1
            \end{pmatrix}
            \text{ or }
            \begin{pmatrix}
            -2 \sqrt{-\alpha} &amp; 0 \\
            0 &amp; -1
            \end{pmatrix}.</me>
        In the first case, we have a saddle since the eigenvalues are real and of opposite sign. In the second case, we have a nodal sink, since both eigenvalues are negative.  The two equilibrium solutions move in opposite directions as <m>\alpha</m> decreases. We can summarize what happens for various values of <m>\alpha</m> with a bifurcation diagram such as the one in <xref ref="nonlinear04-figure-bifurcation" />.</p>

        <figure xml:id="nonlinear04-figure-bifurcation">
            <image width="60%" xml:id="nonlinear04-bifurcation">
                <description>a parabola with the vertex at the origin and opening to the left with a bifurcation point at the origin and stable equilibrium solutions on the negative part of the parabola and saddle points on the positive part of the parabola</description>
                <sageplot>
                    p = plot(sqrt(-x), ( -1.5 , 0), thickness = 2, axes_labels=['$\\alpha$','$x$'], aspect_ratio=1)
                    p += plot(-sqrt(-x), x, -1.5, 0, thickness = 2)
                    points = [ (0,0) ]
                    p += point(points[0], pointsize=70)
                    points = [ (1.5,0) ]
                    p += point(points[0], pointsize=0.1)
                    p += text("Bifurcation Point",(0.5,0.1))
                    p += text("$x = \\sqrt{-\\alpha}$, Saddle Point",(-0.5,1.4))
                    p += text("$x = -\\sqrt{-\\alpha}$, Stable Equilibrium",(-0.5,-1.4))
                    p
                </sageplot>
            </image>
            <caption>Bifurcation diagram</caption>
        </figure>

    </subsection>

    <subsection xml:id="nonlinear04-subsection-hopf-bifurcation">
        <title>The Hopf Bifurcation</title>

        <p>Now let us consider an entirely different type of bifurcation by examining the system
            <md>
                <mrow>\frac{dx}{dt} &amp; = \alpha x + 5y - x(x^2 + y^2)</mrow>
                <mrow>\frac{dy}{dt} &amp; = -5x + \alpha y - y(x^2 + y^2).</mrow>
            </md>
        The origin is an equilibrium solution for all values of <m>\alpha</m>. The linearization of our system is
            <md>
                <mrow>\frac{dx}{dt} &amp; = \alpha x + 5y</mrow>
                <mrow>\frac{dy}{dt} &amp; = -5x + \alpha y.</mrow>
            </md>
        Since the eigenvalues of this system are <m>\alpha \pm 5i</m>, we can easily determine the nature of of our linearization. If <m>\alpha \lt 0</m>, we have a spiral sink. As <m>\alpha</m> moves from negative values to positive values, the origin changes to a center (<m>\alpha = 0</m>), and then to a spiral source (<m>\alpha \gt 0</m>).</p>


        <p>In the case of the nonlinear system, the origin is still a spiral sink for <m>\alpha \gt 0</m> (<xref ref="nonlinear04-figure-hopf-5" />). If <m>\alpha \gt 0</m>, the origin is still a spiral source (<xref ref="nonlinear04-figure-hopf-6" />). However, something quite different happens at <m>\alpha = 0</m>. The origin is stable equilibrium solution with solutions spiraling into the origin very slowly. As <m>\alpha</m> increases past zero, the equilibrium solution destabilizes and becomes a source. In addition, a closed orbit of radius <m>\sqrt{\alpha}</m> develops.  Solutions inside of this closed orbit spiral out towards the orbit, while solutions outside of the orbit spiral inward (<xref ref="nonlinear04-figure-hopf-7" />).</p>

        <figure xml:id="nonlinear04-figure-hopf-5">
            <image width="60%" xml:id="nonlinear04-hopf-5">
                <description>a direction field of slope arrows and a solution spiraling towards the origin</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = -1
                    F = [alpha*x + 5*y -x*(x^2 + y^2), -5*x + alpha*y - y*(x^2 + y^2)]
                    xmin = -2
                    xmax = 2
                    ymin = -2
                    ymax = 2
                    start_x = -1.5
                    start_y = 1.5
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=3,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p = line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/5)-2], S[int(len(S)/5)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    n = sqrt(F[0]^2 + F[1]^2)
                    p += plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    p
                </sageplot>
            </image>
            <caption>Solutions for <m>\alpha \lt 0</m></caption>
        </figure>

        <figure xml:id="nonlinear04-figure-hopf-6">
            <image width="60%" xml:id="nonlinear04-hopf-6">
                <description>a direction field of slope arrows and a solution spiraling towards a stable circle around the origin</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 0
                    F = [alpha*x + 5*y -x*(x^2 + y^2), -5*x + alpha*y - y*(x^2 + y^2)]
                    xmin = -2
                    xmax = 2
                    ymin = -2
                    ymax = 2
                    start_x = -1.5
                    start_y = 1.5
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=25,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p = line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/30)-2], S[int(len(S)/30)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    n = sqrt(F[0]^2 + F[1]^2)
                    p += plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    p
                </sageplot>
            </image>
            <caption>Solutions for <m>\alpha = 0</m></caption>
        </figure>

        <figure xml:id="nonlinear04-figure-hopf-7">
            <image width="60%" xml:id="nonlinear04-hopf-7">
                <description>a direction field of slope arrows and two solutions witn one spiraling in towards a stable circle around the origin and the second spiraling out towards a stable circle</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 1
                    F = [alpha*x + 5*y -x*(x^2 + y^2), -5*x + alpha*y - y*(x^2 + y^2)]
                    xmin = -2
                    xmax = 2
                    ymin = -2
                    ymax = 2
                    n = sqrt(F[0]^2 + F[1]^2)
                    p = plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    start_x = -1.5
                    start_y = 1.5
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=25,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p += line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/50)-2], S[int(len(S)/50)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    start_x = -0.2
                    start_y = 0.2
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=25,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p += line(S, axes_labels=['$x(t)$','$y(t)$'], color="red")
                    p += arrow(S[int(len(S)/50)-2], S[int(len(S)/50)-1], width=1, arrowsize=4, color="red")
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50, color="red")
                    p
                </sageplot>
            </image>
            <caption>Solutions for <m>\alpha \gt 0</m></caption>
        </figure>

        <p>To see exactly what happens as <m>\alpha</m> passes zero and becomes positive, we will rewrite our system in polar coordinates. If we make the substitution <m>x = r \cos \theta</m> and <m>y = r \sin \theta</m>, our nonlinear system can be rewritten as
            <md>
                <mrow>\frac{dr}{dt} &amp; = \alpha r - r^3</mrow>
                <mrow>\frac{d\theta}{dt} &amp; = -5.</mrow>
            </md>
        If <m>\alpha \lt 0</m>, the origin is a sink since <m>\alpha r - r^3 \lt 0</m> for all <m>r \gt 0</m>. In this case all solutions tend towards the origin as <m>t \to \infty</m>. When <m>\alpha \gt 0</m>, the origin is still an equilibrium solution. Moreover, <m>r' = 0</m>, when <m>r = \sqrt{\alpha}</m>. We also know that <m>r' \gt 0</m> for <m>0 \lt r \lt \sqrt{\alpha}</m> and <m>r' \lt 0</m> if <m>r \gt \sqrt{\alpha}</m>. So the circle of radius <m>\sqrt{\alpha}</m> is a periodic solution with the trajectory moving clockwise since <m>\theta' = -5 \lt 0</m>. All nonzero solutions spiral towards this orbit as <m>t \to \infty</m>. This type of bifurcation is called a <term>Hopf bifurcation</term><idx>Hopf bifurcation</idx>. No new equilibrium solutions arise, but a periodic solution develops as <m>\alpha</m> passes through the bifurcation value.</p>

        <theorem xml:id="nonlinear04-theorem-lyapunov">
            <title>Hopf Bifurcation</title>
            <statement>
                <p>Suppose that <m>(x_0(\alpha), y_0(\alpha))</m> is a equilibrium solution for the family of systems
                    <md>
                        <mrow>\frac{dx}{dt} &amp; = f_\alpha(x, y)</mrow>
                        <mrow>\frac{dy}{dt} &amp; = g_\alpha(x, y)</mrow>
                    </md>
                parameterized by <m>\alpha</m>, and the Jacobian matrix for the system evaluated at this equilibrium has eigenvalues <m>a(\alpha) \pm i b(\alpha)</m>. Assume that at some <m>\alpha = \alpha_0</m>, we have <m>a(\alpha_0) = 0</m>, <m>a'(\alpha_0) \gt 0</m>, <m>b(\alpha_0) \neq 0</m>, and that the equilibrium point is asymptotically stable. Then there exists an <m>\alpha_1</m> such that the system has a periodic solution encircling the equilibrium solution for <m>\alpha_0 \lt \alpha \lt \alpha_1</m>.<fn>For a proof and description of the Hopf Bifurcation Theorem see C. Chicone. <em>Ordinary Differential Equations with Applications</em>.  Springer-Verlag, New York, 1999.</fn></p>
            </statement>
        </theorem> 

        <p>Recall that our example system
            <md>
                <mrow>\frac{dx}{dt} &amp; = \alpha x + 5y - x(x^2 + y^2)</mrow>
                <mrow>\frac{dy}{dt} &amp; = -5x + \alpha y - y(x^2 + y^2)</mrow>
            </md>
        has an equilibrium at <m>(0, 0)</m> with eigenvalues  <m>\alpha \pm 5i</m>.  If we let <m>\alpha_0 = 0</m>, then <m>a(0) = 0</m>, <m>a'(0) = 1</m>, and <m>b(0) = 5</m>. Thus, the hypothesis of the Hopf Bifurcation Theorem are satisfied and we are guaranteed a period solution surrounding our equilibrium solution.</p>

        <example>
            <title>Van der Pol's equation</title>

            <p>Van der Pol's equation, a simple nonlinear equation having applications in electrical engineering and mathematical biology, is <m>x'' - x(1 - x^2)x' + x = 0</m>. This equation can be written as the system
                <mdn>
                    <mrow xml:id="nonlinear04-equation-van-der-pol-a">\frac{dx}{dt} \amp = y</mrow>
                    <mrow xml:id="nonlinear04-equation-van-der-pol-b">\frac{dy}{dt} \amp = -x + x(1 - x^2)y.</mrow>
                </mdn>
            The phase portrait for Van der Pol's equation is given in <xref ref="nonlinear04-figure-van-der-pol" />. The origin is the only equilibrium solution to Van der Pol's equation, and one might guess that this solution acts like a spiral source by examining the phase portrait. If we examine the system consisting of only linear terms on the right-hand side of the equation,
                <md>
                    <mrow>\frac{dx}{dt} \amp = y</mrow>
                    <mrow>\frac{dy}{dt} \amp = - x + y </mrow>
                </md>
            we might get a better sense of what is happening.  The matrix for this linear system,
                <me>A =
                \begin{pmatrix}
                0 \amp 1 \\
                -1 \amp 1
                \end{pmatrix},</me>
            has eigenvalues <m>\lambda = (1 \pm i\sqrt{3})/2</m>. This suggests that the origin looks like a spiral source at least locally. Indeed, the Jacobian matrix for <xref ref="nonlinear04-equation-van-der-pol-a" /><ndash /><xref ref="nonlinear04-equation-van-der-pol-a" /> is 
                <me>J
                =
                \begin{pmatrix}
                0  \amp 1 \\
                -1 - 2 x_0 y_0 \amp 1 - x_0^2
                \end{pmatrix},</me>
                which agrees with <m>A</m> for <m>(x_0, y_0) = (0,0)</m>.</p>

            <figure xml:id="nonlinear04-figure-van-der-pol">    
                <image width="60%" xml:id="nonlinear04-van-der-pol">
                    <description>a direction field of slope arrows with a closed orbit about the origin</description>
                    <sageplot>
                        x, y, t = var('x y t')
                        F = [y, -x + x*(1 - x^2)*y]
                        xmin = -4
                        xmax = 4
                        ymin = -4
                        ymax = 4
                        start_x = 1.5
                        start_y = 2
                        start_t = 0
                        P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=20,step=0.01)
                        S = [[j, k] for i,j,k in P]
                        p = line(S, axes_labels=['$x(t)$','$y(t)$'])
                        p += arrow(S[int(len(S))-2], S[int(len(S))-1], width=1, arrowsize=4)
                        points = [ (start_x, start_y) ]
                        p += point(points[0], pointsize=50)
                        n = sqrt(F[0]^2 + F[1]^2)
                        p += plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                        p
                    </sageplot>
                </image>
                <caption>Van der Pol's equation</caption>
            </figure>
        </example>



        <p>Let us examine how a bifurcation might occur in a predator-prey model.  In our model, we will assume that a predator's appetite is satiated when food is abundant. If this is the case, an increase in the prey population has little effect on the interaction terms in our model.  We might model this satiable predator-prey scenario by the equations
            <md>
                <mrow>\frac{dx}{dt} &amp; = (a -bx)x - \frac{cxy}{d + \alpha x}</mrow>
                <mrow>\frac{dy}{dt} &amp; = -ey + \frac{fxy}{d + \alpha x},</mrow>
            </md>
        where <m>x(t)</m> is the prey population at time <m>t</m> and <m>y(t)</m> is the predator population at time <m>t</m>. Here, <m>a, \ldots, f</m> and <m>\alpha</m> are constants. Let us choose the constants <m>a, \ldots, f</m> so that our system becomes
            <md>
                <mrow>\frac{dx}{dt} &amp; = (1 - x)x - \frac{xy}{0.3 + \alpha x}</mrow>
                <mrow>\frac{dy}{dt} &amp; = -0.5y + \frac{xy}{0.3 + \alpha x}.</mrow>
            </md>
        The constant <m>\alpha</m> is know as the <term>satiation constant</term><idx>satiation constant</idx>. The larger the value of <m>\alpha</m>, the more quickly a predator's appetite is satiated as the prey population increases.</p>

        <p>Let us see examine the phase portrait for several values of <m>\alpha</m>. If <m>\alpha = 0</m>, then there is no satiation effect. In this case, all trajectories inside the population quadrant spiral asymptotically towards a single stable equilibrium point (<xref ref="nonlinear04-figure-satiated-predator-prey-1" />).  If <m>\alpha = 1.35</m>, we have a very similar phase portrait with solutions spiraling in towards a stable equilibrium solution (<xref ref="nonlinear04-figure-satiated-predator-prey-2" />). However, if <m>\alpha = 0.9</m>, we have a periodic trajectory. All other trajectories are pulled toward this attracting periodic orbit (<xref ref="nonlinear04-figure-satiated-predator-prey-3" />).</p>

        <figure xml:id="nonlinear04-figure-satiated-predator-prey-1">
            <image width="60%" xml:id="nonlinear04-satiated-predator-prey-1">
                <description>a direction field of slope arrows with a solution curve spiraling in towards an equilibrium solution</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 0
                    F = [(1 - x)*x - x*y/(0.3 + alpha*x), -0.5*y + x*y/(0.3 + alpha*x)]
                    xmin = -0.02
                    xmax = 1
                    ymin = -0.02
                    ymax = 1
                    n = sqrt(F[0]^2 + F[1]^2)
                    p = plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    start_x = 0.9
                    start_y = 0.1
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=30,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p += line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/30)-2], S[int(len(S)/30)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    p
                </sageplot>
            </image>
            <caption>Predator-prey model with <m>\alpha = 0</m></caption>
        </figure>

        <figure xml:id="nonlinear04-figure-satiated-predator-prey-2">
            <image width="60%" xml:id="nonlinear04-satiated-predator-prey-2">
                <description>a direction field of slope arrows with a solution curve spiraling in towards an equilibrium solution</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 1.35
                    F = [(1 - x)*x - x*y/(0.3 + alpha*x), -0.5*y + x*y/(0.3 + alpha*x)]
                    xmin = -0.02
                    xmax = 1
                    ymin = -0.02
                    ymax = 1
                    n = sqrt(F[0]^2 + F[1]^2)
                    p = plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    start_x = 0.9
                    start_y = 0.1
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=80,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p += line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/4)-2], S[int(len(S)/4)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    p
                </sageplot>
            </image>
            <caption>Predator-prey model with <m>\alpha = 1.35</m></caption>
        </figure>

        <figure xml:id="nonlinear04-figure-satiated-predator-prey-3">
            <image width="60%" xml:id="nonlinear04-satiated-predator-prey-3">
                <description>a direction field of slope arrows with a solution curve spiraling in towards a stable closed orbit</description>
                <sageplot>
                    x, y, t = var('x y t')
                    alpha = 0.9
                    F = [(1 - x)*x - x*y/(0.3 + alpha*x), -0.5*y + x*y/(0.3 + alpha*x)]
                    xmin = -0.02
                    xmax = 1
                    ymin = -0.02
                    ymax = 1
                    n = sqrt(F[0]^2 + F[1]^2)
                    p = plot_vector_field((F[0]/n, F[1]/n), (x,xmin, xmax), (y, ymin, ymax), aspect_ratio=1)
                    start_x = 0.9
                    start_y = 0.1
                    start_t = 0
                    P = desolve_system_rk4(F,[x,y],ics=[start_t, start_x, start_y],ivar=t,end_points=80,step=0.01)
                    S = [[j, k] for i,j,k in P]
                    p += line(S, axes_labels=['$x(t)$','$y(t)$'])
                    p += arrow(S[int(len(S)/20)-2], S[int(len(S)/20)-1], width=1, arrowsize=4)
                    points = [ (start_x, start_y) ]
                    p += point(points[0], pointsize=50)
                    p
                </sageplot>
            </image>
            <caption>Predator-prey model with <m>\alpha = 0.9</m></caption>
        </figure>

        <figure xml:id="nonlinear04-figure-satiated-predator-prey-4">
            <image width="60%" xml:id="nonlinear04-satiated-predator-prey-4">
                <description>a bifurcation curve plotted on the alpha verses x-axis with the curve moving up and right and with two bifurcation points moving from a sink to a source and back to a sink</description>
                <sageplot>
                    f(x) = 0.15/(1 - 0.5*x)
                    p = plot(f(x), (0, 1.5), thickness = 2, axes_labels=['$\\alpha$','$x$'], aspect_ratio=1)
                    points = [ (0.85,f(0.85)) ]
                    p += point(points[0], pointsize=70)
                    points = [ (1.2,f(1.2)) ]
                    p += point(points[0], pointsize=70)
                    p += text("Bifurcation Point",(0.85,0.2))
                    p += text("Bifurcation Point",(1.25,0.3))
                    p += text("sink",(0.5, 0.25))
                    p += text("source",(1, 0.37))
                    p += text("sink",(1.37, 0.55))
                    p
                </sageplot>
            </image>
            <caption>Bifurcation diagram for the satiable predator-prey model</caption>
        </figure>

        <p>As <m>\alpha</m> continues to increase a Hopf bifurcation occurs at <m>\alpha \approx 0.5</m>. At this point the equilibrium solution destabilizes and spawns an attracting periodic orbit. As <m>\alpha</m> continues to increase, the amplitude of this periodic orbit increases. However, at <m>\alpha \approx 0.85</m>, the amplitude of the periodic solution begins to decrease. At <m>\alpha \approx 1.2</m>, the equilibrium point re-stabilizes and the periodic solution is absorbed. For <m>\alpha > 1.2</m>, we only have a stable equilibrium solution in the first quadrant. The <m>x</m>-coordinate of our equilibrium solution is
            <me>x = \frac{0.15}{1 - 0.5 \alpha},</me>
        and we can summarize our findings with a bifurcation diagram  (<xref ref="nonlinear04-figure-satiated-predator-prey-4" />).</p>

    </subsection>


    <subsection xml:id="nonlinear04-subsection-important-lessons">
        <title>Important Lessons</title>

        <p><ul>
        
            <li>If we make a slight change in the system, then we might reasonably expect the phase portrait to change slightly. For example, a closed orbit might expand or contract, an equilibrium solution might shift, or a spiral source might tighten up, but we would not expect new equilibrium solutions to appear or a spiral source to turn into a spiral sink.  However, this may be exactly what happens. If such a change occurs in the system through an adjustment of a parameter, we say a <term>bifurcation</term> has occurred.</li>

            <li>A <term>Hopf bifurcation</term> if an attracting periodic solution encircling an equilibrium solution develops as <m>\alpha</m> passes through the bifurcation value.</li>

            <li>Suppose that <m>(x_0(\alpha), y_0(\alpha))</m> is a equilibrium solution for the family of systems
                <md>
                    <mrow>\frac{dx}{dt} &amp; = f_\alpha(x, y)</mrow>
                    <mrow>\frac{dy}{dt} &amp; = g_\alpha(x, y)</mrow>
                </md>
            parameterized by <m>\alpha</m>, and the Jacobian matrix for the system evaluated at this equilibrium has eigenvalues <m>a(\alpha) \pm i b(\alpha)</m>. Assume that at some <m>\alpha = \alpha_0</m>, we have <m>a(\alpha_0) = 0</m>, <m>a'(\alpha_0) \gt 0</m>, <m>b(\alpha_0) \neq 0</m>, and that the equilibrium point is asymptotically stable. Then there exists an <m>\alpha_1</m> such that the system has a periodic solution encircling the equilibrium solution for <m>\alpha_0 \lt \alpha \lt \alpha_1</m>.</li>

            <li>A satiable predator-prey scenario can be modeled by the equations
                <md>
                    <mrow>\frac{dx}{dt} &amp; = (a -bx)x - \frac{cxy}{d + \alpha y}</mrow>
                    <mrow>\frac{dy}{dt} &amp; = -ey + \frac{fxy}{d + \alpha y},</mrow>
                </md>
            where <m>x(t)</m> is the prey population at time <m>t</m> and <m>y(t)</m> is the predator population at time <m>t</m>. Here, <m>a, \ldots, f</m> and <m>\alpha</m> are constants. The constant <m>\alpha</m> is know as the <term>satiation constant</term>. The larger the value of <m>\alpha</m>, the more quickly a predator's appetite is satiated as the prey population increases.</li>

        </ul></p>

    </subsection>

    <reading-questions xml:id="reading-questions-nonlinear04">

        <exercise xml:id="reading-questions-nonlinear04-1">
            <statement>
                <p>Explain what a Hopf bifurcation is.</p>
            </statement>
            <response/>
        </exercise>

        <exercise xml:id="reading-questions-nonlinear04-2">
            <statement>
                <p>What scenerio does a satiated predator-prey model describe? Explain.</p>
            </statement>
            <response/>
        </exercise>

    </reading-questions>


    <exercises xml:id="nonlinear04-exercises"  filenamebase="nonlinear04">
        <title>Exercises</title>

        <exercise>
            <statement>
                <p>Consider the system
                    <md>
                        <mrow>x' &amp; = y</mrow>
                        <mrow>y' &amp; = -x - \frac{y}{4} + x^2.</mrow>
                    </md>
                    <ol>

                        <li>Verify that the function
                            <me>L(x, y) = \frac{x^2}{2} +  \frac{y^2}{2} - \frac{x^3}{3}</me>
                        is a Lyapunov function for the system.</li>

                        <li>Sketch the level sets of <m>L</m>.</li>

                        <li>What can you conclude about the phase portrait of the system from (1) and (2)?</li>

                    </ol></p>  
            </statement>
        </exercise>

        <exercise>
            <statement>
                <p>Let <m>G(x, y) = x^3 - 3xy^2</m>.
                    <ol>

                        <li>What is the gradient system with vector field given by the gradient of <m>G</m>?</li>

                        <li>Sketch the graph of <m>G</m> and the level sets of <m>G</m>.</li>

                        <li>Sketch the phase portrait of the gradient system in (1).</li>

                    </ol></p>  
            </statement>
        </exercise>

        <exercise>
            <statement>
                <p>Suppose that the smell of a bunch of dead fish in the region <m>-2 \leq x \leq 2</m>, <m>-2 \leq y \leq 2</m> is given by the function
                    <me>S(x, y) = x^2 + y^2 - \frac{x^4 + y^4}{4} - 3x^2 y^2 + 100.</me>
                    <ol>

                        <li>What is the gradient system who vector field is the gradient of <m>S</m>?</li>

                        <li>Use a computer program to graph the phase portrait of the system.</li>

                        <li>How many dead fish are there and where are they?</li>
                        
                        <li>Using the results from part (2), sketch the level sets of <m>S</m>.</li>

                        <li>Why is this model not realistic for large values of <m>x</m> or <m>y</m>?</li>

                    </ol></p>  
            </statement>
        </exercise>

        <exercise>
            <statement>
                <p>Consider the system of differential equations
                    <md>
                        <mrow>x' &amp; = x(-x -y + 1)</mrow>
                        <mrow>y' &amp; = y(-ax -y + b),</mrow>
                    </md>
                where <m>a</m> and <m>b</m> are parameters with <m>a, b \gt 0</m>.  Suppose that this system is only defined for <m>x, y \geq 0</m>.
                    <ol>

                        <li>Use nullclines to sketch the phase portrait for this system for several values of <m>a</m> and <m>b</m>.</li>

                        <li>Determine the values of <m>a</m> and <m>b</m> at which a bifurcation occurs.</li>

                    </ol></p>  
            </statement>
        </exercise>

        <exercise>
            <statement>
                <p>Show that the quadratic polynomial 
                    <me>V(x, y) = ax^2 + 2bxy + cy^2</me>
                is positive definite with minimum at <m>(x, y) = (0, 0)</m> if and only if <m>a \gt 0</m> and <m>ac - b^2 \gt 0</m>.</p>  
            </statement>
        </exercise>

        <exercise>
            <statement>
                <p>Use the positive definite function <m>V(x, y) = x^2 + y^2</m> to argue that the system
                    <md>
                        <mrow>x' &amp; = -x - 2y^2</mrow>
                        <mrow>y' &amp; = 2xy - y^3</mrow>
                    </md>
                has an asymptotically stable equilibrium solution at  <m>(x, y) = (0, 0)</m>.</p>  
            </statement>
        </exercise>

    </exercises>


</section>

<!--</section>-->
