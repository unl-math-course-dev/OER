<?xml version="1.0" encoding="UTF-8" ?>
<!-- <mathbook><book> -->
<chapter xml:id="chap8"  xmlns:xi="http://www.w3.org/2001/XInclude">
<title>Linear Systems</title>
<introduction>
<sidebyside width="60%" margins="0% 40%"><image source="images/squirrel.jpg"><description>Squirrel eating: Adam Jones/Photo Researchers, Inc.</description></image></sidebyside>
<p>
    <term>Linear programming</term> is an application of linear systems developed in the 1940s to solve complex optimization problems during wartime operations. Today, linear programming is used in scheduling and allocation of resources, in shipping and telecommunications networks, and in the selection of stocks and bonds for portfolios. In 1980, the computer scientist Laszlo Lovasz said, <q>If one would take statistics about which mathematical problem is using up most of the computer time in the world, ... the answer would probably be linear programming.</q> 
</p>
<p>
	George Dantzig (1914<ndash/>2005) invented the simplex method for solving linear programming problems in 1947. His first application of the method was to determine an adequate diet of least cost. This problem involved 9 equations in 77 unknowns and took 120 days to solve using the desk calculators available at the time.</p>
	<p> In this chapter, we use a graphing technique to solve problems in two unknowns. For example, the diet of the Columbian ground squirrel consists of two foods: grass and forb (a type of flowering weed). Small animals spend most of their time foraging for food, but they must also be alert for predators. Which foraging strategy favors survival: Should the squirrel try to satisfy its dietary requirements in minimum time, thus minimizing its exposure to predators and the elements, or should it try to maximize its intake of nutrients?
</p>
<sidebyside>
<image source="images/fig-minimize-time-eating">
  <description>
    feasible set with different times
  </description>
</image>
<image source="images/fig-maximize-energy">
  <description>
    feasible set with different energy consumed
  </description>
</image>
</sidebyside>
<p>
	Using linear programming, Gary Belovsky of Notre Dame University identified the optimal amounts of forb and grass for each foraging strategy. We can compare those solutions to the squirrel's actual diet to see which strategy the squirrel favors.
</p>

<investigation><title>Interpolating Polynomials</title>
<p>
	In <xref ref="chap6" text="type-global" />, we learned to fit a quadratic function through three points on its graph. A polynomial whose graph passes through a given set of points is called an <term>interpolating polynomial</term><idx>interpolating polynomial</idx>. Because polynomials are easy to evaluate and manipulate, they are often used to approximate more complicated functions and to describe the shapes of curves.
</p>
<p>
	In this Investigation, we find interpolating polynomials of degrees <m>1</m>, <m>2</m>, and <m>3</m> to approximate the function <m>f(x) = \dfrac{12}{x}</m>.
</p>
<p>
	<ol label="1">
		<li><p>
			<ol label="a">
				<li><p>
					Graph the function <m>f(x) = \dfrac{12}{x}</m> in the window
					<md>
						<mrow>
							\text{Xmin} \amp = -2 \amp\amp \text{Xmax} = 7.4
						</mrow>
						<mrow>
							\text{Ymin} \amp = -5 \amp\amp \text{Ymax} = 20
						</mrow>
					</md>
				</p></li>
				<li><p>
					Complete the table of values.</p>
					<sidebyside><tabular halign="center" top="major" left="minor" right="minor" bottom="minor">
						<row>
							<cell><m>x</m></cell>
							<cell><m>1</m></cell>
							<cell><m>2</m></cell>
							<cell><m>3</m></cell>
							<cell><m>4</m></cell>
							<cell><m>5</m></cell>
							<cell><m>6</m></cell>
						</row>
						<row>
							<cell><m>f(x)</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
							<cell><m>\hphantom{0000}</m></cell>
						</row>
					</tabular>
				</sidebyside></li>
			</ol>
		</p></li>
		<li><p>
			First we will find a linear polynomial <m>P_1(x) = ax + b</m> that matches <m>f(x)</m> at <m>x = 1</m> and <m>x=6</m>. We must find constants <m>a</m> and <m>b</m> so that <m>P_1(1) = f(1)</m> and <m>P_1(6) = f(6)</m>.
			<ol label="a">
				<li><p>
					The two conditions above translate into equations about <m>a</m> and <m>b</m>. The constants <m>a</m> and <m>b</m> must satisfy the system
					<md>
	                    <mrow>a \cdot 1 + b \amp = f (1)</mrow>
	                    <mrow>a \cdot 6 + b \amp = f (6)</mrow>
					</md>
					Solve the system and find the polynomial <m>P_1(x)</m>.
				</p></li>
				<li><p>
					Graph <m>P_1(x)</m> in the same window with <m>f(x)</m>.
				</p></li>
			</ol>
		</p></li>
		<li><p>
			Next, we will find a quadratic polynomial <m>P_2(x) = ax^2 + bx + c</m> that matches <m>f(x)</m> at <m>x = 1</m>, <m>2.5</m>, and <m>6</m>.
			<ol label="a">
				<li><p>
					Write and solve a system of equations for the constants <m>a</m>, <m>b</m>, and <m>c</m>.
				</p></li>
				<li><p>
					Graph <m>P_2(x)</m> in the same window with <m>f(x)</m>.
				</p></li>
			</ol>
		</p></li>
		<li><p>
			We can also find a cubic polynomial <m>P_3(x) = ax^3 + bx^2 + cx + d</m> that matches <m>f(x)</m> at <m>x = 1</m>, <m>3</m>, <m>4</m>, and <m>6</m>.
			<ol label="a">
				<li><p>
					Write a system of equations for <m>a</m>, <m>b</m>, <m>c</m>, and <m>d</m>. We will see how to solve such a system later in this chapter. For now, we will use the calculator's cubic regression feature.
				</p></li>
				<li><p>
					Enter the coordinates of <m>P_3(x)</m> evaluated at <m>x=1</m>, <m>3</m>, <m>4</m>, and <m>6</m> into <m>L_1</m> and <m>L_2</m> under the <em>STAT EDIT</em> menu. Then, from the <em>STAT CALC</em> menu, choose <em>6: CubicReg</em> and press <c>ENTER</c>.
				</p></li>
				<li><p>
					Graph <m>P_3(x)</m> in the same window with <m>f(x)</m>.
				</p></li>
			</ol>
		</p></li>
		<li><p>
			How well does each interpolating polynomial approximate the function <m>f(x)</m>? Graph the "error function," <m>E_n(x)</m>, for each polynomial on the interval <m>[-2, 7.4]</m>.
			<md>
				<mrow>E_1(x) \amp = f(x) - P_1(x)</mrow>
				<mrow>E_2(x) \amp = f(x) - P_2(x)</mrow>
				<mrow>E_3(x) \amp = f(x) - P_3(x)</mrow>
			</md>
			(You will have to choose a suitable <m>y</m>-window for each error function.) What is the maximum error on the interval <m>[-2, 7.4]</m> for each approximating polynomial?
		</p></li>
	</ol>
</p>
</investigation>


</introduction>


    <xi:include href="./section-8-1.xml" />     <!-- Systems of Linear Equations in Two Variables  -->
    <xi:include href="./section-8-2.xml" />     <!-- Systems of Linear Equations in Three Variables  -->
    <xi:include href="./section-8-3.xml" />     <!-- Solving Linear Systems Using Matrices  -->
    <xi:include href="./section-8-4.xml" />     <!-- Linear Inequalities  -->
    <xi:include href="./section-8-5.xml" />     <!-- Linear Programming  -->
    <xi:include href="./chap8-summary.xml" />       <!-- Summary and Review-->
    <xi:include href="./chap8-rev-projects.xml" />  <!-- projects  -->
</chapter> 
<!-- </book>  </mathbook> -->